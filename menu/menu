#!/bin/bash
# COLOR VALIDATION
clear
y='\033[1;33m' #yellow
BGX="\033[42m"
CYAN="\033[96m"
z="\033[96m"
f="\033[1;97;41m"
RED='\033[0;31m'
NC='\033[0m'
gray="\e[1;30m"
Blue="\033[0;34m"
green='\033[0;32m'
grenbo="\e[92;1m"
purple="\033[1;95m"
YELL='\033[0;33m'
#INTALLER-UDP
UDPX="https://docs.google.com/uc?export=download&confirm=$(wget --quiet --save-cookies /tmp/cookies.txt --keep-session-cookies --no-check-certificate 'https://docs.google.com/uc?export=download&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2' -O- | sed -rn 's/.*confirm=([0-9A-Za-z_]+).*/\1\n/p')&id=1S3IE25v_fyUfCLslnujFBSBMNunDHDk2"
ISP=$(cat /root/.info/.isp)
CITY=$(cat /root/.info/.city)
IPVPS=$(curl -s ipv4.icanhazip.com)
NS=$(cat /etc/xray/dns)
domain=$(cat /etc/xray/domain)
RAM=$(free -m | awk 'NR==2 {print $2}')
USAGERAM=$(free -m | awk 'NR==2 {print $3}')
MEMOFREE=$(printf '%-1s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
LOADCPU=$(printf '%-0.00001s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
MODEL=$(cat /etc/os-release | grep -w PRETTY_NAME | head -n1 | sed 's/=//g' | sed 's/"//g' | sed 's/PRETTY_NAME//g')
CORE=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
DATEVPS=$(date +'%d-%m-%Y')
TIMEZONE=$(printf '%(%H-%M-%S)T')
SERONLINE=$(uptime -p | cut -d " " -f 2-10000)
clear
MYIP=$(curl -sS ipv4.icanhazip.com)
echo ""
# USERNAME
rm -f /usr/bin/user
username=$(curl ${izinsc} | grep $MYIP | awk '{print $2}')
echo "$username" >/usr/bin/user
# validity
rm -f /usr/bin/e
valid=$(curl ${izinsc} | grep $MYIP | awk '{print $3}')
echo "$valid" >/usr/bin/e
# DETAIL ORDER
username=$(cat /usr/bin/user)
oid=$(cat /usr/bin/ver)
exp=$(cat /usr/bin/e)
clear
# CERTIFICATE STATUS
d1=$(date -d "$valid" +%s)
d2=$(date -d "$today" +%s)
certifacate=$(((d1 - d2) / 86400))
# VPS Information
DATE=$(date +'%Y-%m-%d')
datediff() {
    d1=$(date -d "$1" +%s)
    d2=$(date -d "$2" +%s)
    echo -e "$COLOR1 $NC Expiry In   : $(( (d1 - d2) / 86400 )) Days"
}
mai="datediff "$Exp" "$DATE""

# Status Expired Or Active
Info="(${green}Active${NC})"
Error="(${RED}Expired${NC})"
today=`date -d "0 days" +"%Y-%m-%d"`
Exp1=$(curl ${izinsc} | grep $MYIP | awk '{print $3}')
if [[ $today < $Exp1 ]]; then
sts="${Info}"
else
sts="${Error}"
fi
clear

# OS Uptime
uptime="$(uptime -p | cut -d " " -f 2-10)"

# Getting CPU Information
cpu_usage1="$(ps aux | awk 'BEGIN {sum=0} {sum+=$3}; END {print sum}')"
cpu_usage="$((${cpu_usage1/\.*} / ${coREDiilik:-1}))"
cpu_usage+=" %"

WKT=$(curl -s ipinfo.io/timezone )
DAY=$(date +%A)
DATE=$(date +%m/%d/%Y)
DATE2=$(date -R | cut -d " " -f -5)
IPVPS=$(curl -s ipv4.icanhazip.com)
cname=$( awk -F: '/model name/ {name=$2} END {print name}' /proc/cpuinfo )
cores=$( awk -F: '/model name/ {core++} END {print core}' /proc/cpuinfo )
freq=$( awk -F: ' /cpu MHz/ {freq=$2} END {print freq}' /proc/cpuinfo )
tram=$( free -m | awk 'NR==2 {print $2}' )
uram=$( free -m | awk 'NR==2 {print $3}' )
fram=$( free -m | awk 'NR==2 {print $4}' )
clear
ssh_service=$(/etc/init.d/ssh status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
dropbear_service=$(/etc/init.d/dropbear status | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
haproxy_service=$(systemctl status haproxy | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
xray_service=$(systemctl status xray | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
nginx_service=$(systemctl status nginx | grep Active | awk '{print $3}' | cut -d "(" -f2 | cut -d ")" -f1)
#Status | Geo Project
clear
######################################
# // RUNNING SSH
######################################
if [[ $ssh_service == "running" ]]; then 
   status_ssh="\033[92;1mON${NC}"
else
   status_ssh="\033[91;1mOFF${NC} "
fi
######################################
# // RUNNING WEBSOCKET
######################################
ssh_ws=$( systemctl status ws | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $ssh_ws == "running" ]]; then
    status_ws_epro="\033[92;1mON${NC}"
else
    status_ws_epro="\033[91;1mOFF${NC} "
fi
######################################
# RUNNING HAPROXY
######################################
if [[ $haproxy_service == "running" ]]; then 
   status_haproxy="\033[92;1mON${NC}"
else
   status_haproxy="\033[91;1mOFF${NC} "
fi
######################################
# RUNNING XRAY
######################################
if [[ $xray_service == "running" ]]; then 
   status_xray="\033[92;1mON${NC}"
else
   status_xray="\033[91;1mOFF${NC} "
fi
######################################
# RUNNING NGINX
######################################
if [[ $nginx_service == "running" ]]; then 
   status_nginx="\033[92;1mON${NC}"
else
   status_nginx="\033[91;1mOFF${NC} "
fi
stat_noobz=$( systemctl status noobzvpns | grep Active | awk '{print $3}' | sed 's/(//g' | sed 's/)//g' )
if [[ $stat_noobz == "running" ]]; then
    stat_noobz="${COLOR1}ON${NC}"
else
    stat_noobz="${RED}OFF${NC}"
    systemctl start noobzvpns
fi
######################################
# RUNNING DROPBEAR
######################################
if [[ $dropbear_service == "running" ]]; then 
   status_dropbear="\033[92;1mGOOD${NC}"
else
   status_dropbear="\033[91;1mNONE${NC} "
fi
#####INFOAKUN
vlx=$(grep -c -E "^#& " "/etc/xray/config.json")
let vla=$vlx/2
vmc=$(grep -c -E "^### " "/etc/xray/config.json")
let vma=$vmc/2
ssh1="$(awk -F: '$3 >= 1000 && $1 != "nobody" {print $1}' /etc/passwd | wc -l)"
trx=$(grep -c -E "^#! " "/etc/xray/config.json")
let trb=$trx/2
ssx=$(grep -c -E "^#ss# " "/etc/xray/config.json")
let ssa=$ssx/2
noobzvpns=$(grep -c -E "^#& " "/etc/noobzvpns/config.json")
###########
KANAN="\033[1;32m<\033[1;33m<\033[1;31m<\033[1;31m$NC"
KIRI="\033[1;32m>\033[1;33m>\033[1;31m>\033[1;31m$NC"
########
r="\033[1;31m"  #REDTERANG
a=" ${CYAN}ACCOUNT PREMIUM" 
#clear
echo -e " "
echo -e "\033[97;1m┌─────────────────────────────────────────────────┐\033[0m "
echo -e "\e[97;1m│\e[0m \033[41;1;97;1m           AUTOSCRIPT ZIDSTORE             \033[0m \e[97;1m│\e[0m"
echo -e "\033[97;1m└─────────────────────────────────────────────────┘\033[0m "
echo -e "\033[97;1m┌─────────────────────────────────────────────────┐\033[0m "
echo -e " ${z}$NC$r - $NC$y System OS ${NC}     $z=$NC $MODEL${NC}"
echo -e " ${z}$NC$r - $NC$y ISP ${NC}           $z=$NC $ISP${NC}"
echo -e " ${z}$NC$r - $NC$y CITY ${NC}          $z=$NC $CITY${NC}"
echo -e " ${z}$NC$r - $NC$y Server RAM ${NC}    $z=$NC $tram MB $NC"
echo -e " ${z}$NC$r - $NC$y Core Cpu ${NC}      $z=$NC $CORE${NC}" CPU
echo -e " ${z}$NC$r - $NC$y Uptime Server ${NC} $z=$NC $SERONLINE${NC}"
echo -e " ${z}$NC$r - $NC$y Date ${NC}          $z=$NC $DATEVPS${NC}"
echo -e " ${z}$NC$r - $NC$y Time ${NC}          $z=$NC $TIMEZONE${NC}"
echo -e " ${z}$NC$r - $NC$y Domain ${NC}        $z=$NC $domain${NC}"
echo -e "\033[97;1m└─────────────────────────────────────────────────┘\033[0m"
echo -e "\033[97;1m     ┌───────────────────────────────────────┐\033[0m "
echo -e "\033[97;1m              SSH OPENVPN    :     $ssh1         \033[0m " 
echo -e "\033[97;1m              VLESS XRAY     :     $vla          \033[0m " 
echo -e "\033[97;1m              VMESS XRAY     :     $vma          \033[0m " 
echo -e "\033[97;1m              TRJAN XRAY     :     $trb          \033[0m " 
echo -e "\033[97;1m              SHADOWSOCK     :     $ssx          \033[0m "
echo -e "\033[97;1m     └───────────────────────────────────────┘\033[0m "
echo -e "\033[97;1m┌─────────────────────────────────────────────────┐\033[0m "
echo -e "\033[97;1m|\033[0m\033[33m PROXY \033[0m  $status_haproxy  \e[0m|\e[33m NGINX  \e[0m $status_nginx  \e[0m|\033[33m SSHWS  \033[0m $status_ws_epro \033[0m|  $status_dropbear | \033[97;1m \033[0m"
echo -e "\033[97;1m└─────────────────────────────────────────────────┘\033[0m "
echo -e "\033[97;1m    ┌─────────────────────────────────────────┐\033[0m "
echo -e "      ${z}$NC [${r}01${NC}]$RED MENU SSH$NC     ${z} $NC [${r}05${NC}]$RED MENU SSWS$NC  ${z}$NC"
echo -e "      ${z}$NC [${r}02${NC}]$RED MENU VMESS$NC   ${z} $NC [${r}06${NC}]$RED MENU NOOBZVPN$NC ${z}$NC"
echo -e "      ${z}$NC [${r}03${NC}]$RED MENU VLESS$NC   ${z} $NC [${r}07${NC}]$RED SPEEDTEST$NC ${z} $NC"
echo -e "      ${z}$NC [${r}04${NC}]$RED MENU TROJAN$NC  ${z} $NC [${r}08${NC}]$RED MENU UTILITY$NC ${z} $NC"
echo -e "\033[97;1m    └─────────────────────────────────────────┘\033[0m "
echo -e "\033[97;1m┌─────────────────────────────────────────────────┐\033[0m "
echo -e "\033[97;1m│  DEVELOPER     : XYORUZ STORE                   │\033[0m "
echo -e "\033[97;1m│  VERSION SCRIPT: V 5.5 ELTS                     │\033[0m "
echo -e "\033[97;1m│  NAMA          : XYR-SCRIPT-FREE                │\033[0m "
echo -e "\033[97;1m│  EXP SCRIPT    : LEFTIME                        │\033[0m "
echo -e "\033[97;1m└─────────────────────────────────────────────────┘\033[0m "
echo -e ""
read -p " PILIH MENU DENGAN CARA KETIK 1/8 : " opt
echo -e ""
case $opt in
1 | 01)
clear
m-sshws
;;
2 | 02)
clear
m-vmess
;;
3 | 03)
clear
m-vless
;;
4 | 04)
clear
m-trojan
;;
5 | 05)
clear
m-ssws
;;
6 | 06)
clear
m-noob
;;
7 | 07)
clear
speedtest
;;
7 | 07)
clear
speedtest
menu
;;
8 | 08)
clear
menu-x
;;
0 | 00)
exit
;;
x)
menu
;;
*) clear ;
echo -e 
menu
;;
esac